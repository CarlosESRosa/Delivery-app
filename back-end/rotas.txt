REQ = Requisição
RES = Response
MIN = Número mínimo de caracteres (quando string) ou valor mínimo do número (quando number)

--------------------------

PUBLIC:

GET /images/nomeDaImagem.jpg

Exibe a imagem.

--------------------------

POST /login {
  REQ: {
    BODY: {
      email: string,
      password: string,
    }
  }

  RES: {
    token: string
  }
}

GET /user/me {
  REQ: {
    HEADERS: {
      authorization: string (token)
    }
  }

  RES: {
    id: number,
    name: string,
    email: string,
    role: string
  }
}

POST /user {
  REQ: {
    BODY: {
      name: string (full name - min 12)
      email: string,
      password: string (min 6)
    }
  }

  RES: {
    token: string
  }
}

GET /product/:id {
  REQ: {}

  RES: {
    id: number,,
    name: string,
    price: number (decimal),
    urlImage: string
  }
}

GET /product {
  REQ: {}

  RES: [
    {
      id: number,
      name: string,
      price: number (decimal),
      urlImage: string
    }
  ]
}

POST /sale {
  REQ: {
    HEADERS: {
      authorization: string (token)
    },
    BODY: {
      sellerId: string,
      deliveryAddress: string,
      deliveryNumber: string,
      totalPrice: number (decimal),
      products: [
        {
          id: string,
          quantity: number
        }
        ...
      ]
    }
  }

  RES: {
    id: number,
	  userId: number,
	  sellerId: number,
	  deliveryAddress: string,
	  deliveryNumber": number,
	  totalPrice: number,
	  saleDate: string (date)
  }
}

GET /sale {
  REQ: {
    HEADERS: {
      authorization: string (token)
    }
  },

  RES: [{
		id: number,
		deliveryAddress: string,
		deliveryNumber: string,
		saleDate: string,
		sellerId: number,
		status: string,
		totalPrice: number,
		userId: number,
		user_id: number,
		seller_id: number,
		sales: [
			{
				id: number,
				name: string,
				price: number,
				urlImage: string,
				SaleProduct: {
					saleId: number,
					productId: number,
					quantity: number,
					sale_id: number,
					product_id: number
				}
			},
		]
	}]
}

GET /sale/:id {
    REQ: {
    HEADERS: {
      authorization: string (token)
    }
  },

  RES: {
		id: number,
		deliveryAddress: string,
		deliveryNumber: string,
		saleDate: string,
		sellerId: number,
		status: string,
		totalPrice: number,
		userId: number,
		user_id: number,
		seller_id: number,
		sales: [
			{
				id: number,
				name: string,
				price: number,
				urlImage: string,
				SaleProduct: {
					saleId: number,
					productId: number,
					quantity: number,
					sale_id: number,
					product_id: number
				},
        user: {
		      id: number,
		      name: string,
		      role: string,
	      },
	      seller: {
		      id: number,
		      name: string,
		      role: string,
	      }
			},
		]
	}
}

PUT /sale/:id {
  REQ: {
    HEADERS: {
      authorization: string (token)
    },

  BODY: {
    status: string
  }
  },

  RES: {
		id: number,
		deliveryAddress: string,
		deliveryNumber: string,
		saleDate: string,
		sellerId: number,
		status: string,
		totalPrice: number,
		userId: number,
		user_id: number,
		seller_id: number,
  }
}
